void wh_internal_msg(object a, string b);
void wh_internal_determine_status(object a, string b, object c);
void wh_internal_force_cmd(object a, string b);
void do_replace(object a, string b);
      
int cmd_creplace(string arg)
{
  string who, file, wd;
  object obj;

  if(!arg || sscanf(arg, "%s %s", who, file) < 2)
    return(write("\
Usage: 'creplace <who>|'all' <path>'\n\
i.e.   'creplace earwax ~/swamp/NPC/j_earring'\n\
 -or-  'creplace symbio ~dragnar/MKScar/scar'\n");

  file = resolve_path(file);
  
  write("Replacing all instances of "+file+" on "+(who=="all"?
        "ALL PLAYERS":capitalize(who))+"...\n");
        
  file = file[1..strlen(file)-1];
        
  if(who=="all")
  {
    object *us;
    int    s;
    s = sizeof(us = users());
    while(s--)
      if(obj=us[s])
        do_replace(obj, file);
  }
  else
  {
    if(obj = find_player(who))
      do_replace(obj, file);
    else
      return (write("Can't find player "+who+".\n"),1);
  }
  write("Done.\n");
  return 1;
}

void wh_internal_msg(object who, string msg)
{
  write("["+(string)who->query_real_name()+"] : "+msg);
}

void wh_internal_force_cmd(object ob, string cmd)
{
  wh_internal_msg(ob, "Forcing \""+cmd+"\"...\n");
  command(cmd, ob);
}

void wh_internal_determine_status(object ob, string func, 
                                  object who)
{
  wh_internal_msg(who,(call_other(ob,func)?"Ok":"Failed")+".\n");
}

status do_replace(object who, string path)
{
  object *di, obj, cob;
  string sh;
  int    s,   tmp, wieldFlag, wornFlag;
  s = sizeof(di = deep_inventory(who));
  while(s--)
    if((obj=di[s]) && sscanf(file_name(obj),path+"#%d",tmp))
    {
      wh_internal_msg(who, "Desting #"+tmp+"\n");
      if(sh=(string)obj->short())
        tell_object(who, (sh?"Your "+sh:"Something)+" is updated \
by "+(string)this_player()->query_name()+
        " to the latest version.\n");
      
      wwho, "Dropping #"+tmp+"\n");
      obj->drop();
      wh_internal_msg(who, "Destructing #"+tmp+"\n");
      destruct(obj);
      if(catch(cob=clone_object(path)))
        wh_internal_msg("Object did not clone properly ..\n");
      else
      {
        move_object(cob, who);
        if(wieldFlag)
        {
          wh_internal_force_cmd(who, "wield "+
            (string)cob->query_name()+".\n");
          wh_internal_determine_status(cob,"query_wielded",who);
        }
        if(wornFlag)
        {
          wh_internal_force_cmd(who, "wear "+
            (string)cob->query_name()+".\n");
          wh_internal_determine_status(cob,"query_worn",who);
        }
        wh_internal_msg("Object replaced.\n");
      }
    }
}
