/*
//  Created:      Forbin@Nirvana
//  Copyright:    Copyright (c) 2001 Forbin
//                  All Rights Reserved.
//  Function:     Castle object
//  Create Date:  2001.02.21
//  Last Edit:    2004.06.24 -Forbin
//  Notable Changes:
//    2004.01.26 - Recoded pretty much from the ground up       
//    2004.06.18 - Added message telling of reporting commands & array to 
//                 manage telling players only once per reboot.
//    2004.07.20 - Added query to block telling me if my own chars enter
*/

#define NAME "Forbin"
#define DEST "room/south/sforst4"
#include "/players/forbin/define.h"
#include "/players/forbin/logging.h"
#include "/players/forbin/closed/pc.h"

string *Enter;

id(str) { return (str == "pathway" || str == "path" || str == "sign" ||
                  str == "wooden sign" || str == "castle" || 
                  str == "forbin's castle"); }

short() {
  if(this_player()) 
    return "A newly cleared pathway leads east" + (this_player()->query_level() > 20 ? " (Forbin's Castle)" : "");
  else return "A newly cleared pathway leads east";
}

long(string str) {
  if(str == "sign" || str == "wooden sign") {
    write("  A wooden sign, carefully lettered by hand, is stuck into the ground\n"+
          "to the left side of the pathway.  You could read it.\n");
  }
  else 
    write("  Heading eastward, deeper into the South Forest, a trampled dirt\n"+
          "pathway has been recently cleared by the wizard Forbin.  Neatly kept,\n"+
          "it snakes a circuitous trail around some well-pruned trees and bushes\n"+ 
          "before disappearing into the woods.\n"+
          "  A hand-lettered wooden sign has been staked beside the trail.\n");
}

init() {
  add_action("cmd_east", "east");
  add_action("cmd_read", "read");
}

cmd_east() {
  if(this_player()->is_npc()) return 1;
  if(!query_enter(this_player()->query_real_name()) || !random(3)) {
    write(
  HIC+"\n\n     While in my area(s) you are able to submit bugs, typos, ideas,\n"+ 
      "     and opinions by prepending the type ("+HIW+"bug"+HIC+", "+HIW+"typo"+HIC+", "+HIW+"idea"+HIC+", "+HIW+"opinion"+HIC+")\n"+ 
      "     with an f, as in '"+HIW+"fbug ["+NORM+"bug"+HIW+"]"+HIC+"' and '"+HIW+"fidea ["+NORM+"idea"+HIW+"]"+HIC+"'.  Please give\n"+
      "     me feedback on things; I'll do my best to improve and/or fix\n"+ 
      "     what's reported or suggested.  For more information on this,\n"+ 
      "     just type '"+HIW+"fhelp"+NORM+"'"+HIC+" when in my area.\n\n"+NORM);
    add_enter(this_player()->query_real_name());
  } 
  this_player()->move_player("east#/players/forbin/realms/entrance.c");
#ifdef ENTERLOG
  log_this(ENTERLOG, "entered the castle.");
  if(find_player("forbin") && !query_pc(this_player()->query_real_name())) {
    tell_object(find_player("forbin"), 
      HIC+capitalize(who)+" just entered your castle.\n"+NORM);
  }
#endif
  return 1; 
}

cmd_read(string str) {
  if(!str || str != "sign") { 
    notify_fail("Read what?\n"); 
      return 0; 
  }
  write("The wooden sign reads:\n\n"+
        "     "+HIW+"The Imagination may be compared to Adam's\n"+
        "     dream - he awoke and found it truth."+NORM+"\n"+
        "                           "+GRN+"~ John Keats\n"+
        "                               letter to Benjamin Bailey\n"+
        "                               22 November 1817"+NORM+"\n\n");
    return 1; 
}

reset(arg) {
  if(arg) return;
  move_object(this_object(), DEST);
  start_autoloads();
}

is_castle() { return 1; }

start_autoloads() {
  "/players/forbin/closed/ftell.c"->load_it();
/* For dates of Tour de France only [Jul 3-25] - don't forget to remove 
  if(!present("livestrongdispenser", find_object("room/vill_green.c"))) {
    move_object(clone_object("/players/forbin/realms/misc/livestrongd.c"), find_object("/room/vill_green.c"));
  }
*/  
}

add_enter(string str) {
  if(!query_enter(str)) return Enter += ({ str, });
    return 0;
}

sub_enter(string str) {
  if(query_enter(str)) return Enter -= ({ str, });
    return 0;
}

query_enter(string str) {
  if(!Enter || !sizeof(Enter)) return 0;
  if(index(Enter, str) > -1) return 1;
  return 0;
}
/*
query_pc(string str) {
  if(!PC || !sizeof(PC)) return 0;
  if(index(PC, str) > -1) return 1;
  return 0;
}
*/
