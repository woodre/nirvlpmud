short() { return "The Sacred Blood Doppleganger Guild"; }
long() {
  write("You have entered the [1mSacred Blood Doppleganger Guild[m.\n"+
          "Type 'list' for a list of commands.\n"+
          "  You can exit to the east or west.\n");
  return 1;
}
reset(arg) {
  if (arg) return;
  set_light(1);
}
east() {
  this_player()->move_player("east#/players/grimm/newbie/rooms/entrance");
  return 1;
}
west() {
string dummy;
/*
if(!(this_player()->query_guild_name()=="doppleganger")) {
*/
if(!(sscanf(this_player()->query_guild_name(),"dopple%s",dummy))) {
  if(!this_player()->query_npc()) {
  write("You are not a member of the Doppleganger's guild. You cannot enter that room.\n");
  return 1;
  }
}
  this_player()->move_player("west#/players/grimm/closed/obj/badge_stuff/guild_pr");
  return 1;
}
init() {
  add_action("west","west");
  add_action("west","w",1);
  add_action("unjoin","unjoin");
  add_action("join","join");
  add_action("list","list");
  add_action("swap","swap");
  add_action("register","register");
  add_action("east","east");
  add_action("east","e",1);
  add_action("rejoin","rejoin");
  add_action("cost","cost");
  add_action("advance","advance");
}
list () {
write("          Commands you can do:\n"+
      "          -----------------------------------------------------\n"+
      "          Advance .. Advance your level in the guild\n"+
      "          Cost ..... Check the costs in coins of advancing\n"+
      "          Join ..... Join the guild\n"+
      "          List ..... This menu\n"+
      "          Register . Register your name with the guild\n"+
      "          Rejoin ... Rejoin the guild if your badge is messed up\n"+
      "          Swap ..... Swap <x> experience for <x> guild experience\n"+
      "          Unjoin ... Unjoin the guild (loosing all guild rank!)\n"+
      "          -----------------------------------------------------\n\n");

return 1; }
join() {
   object badge;
   if(this_player()->query_npc()) {
    write("You are not a player! Bugger off!\n");
    return 1;
  }
/*
   if(present("seal", this_player()) ||
      present("pentagram", this_player()) ||
      present("thief guild", this_player()) ||
      present("robes", this_player()) ||
      present("fangs", this_player()) ||
      present("license", this_player()) ||
      (this_player()->query_guild_exp() > 0) ||
      present("books", this_player())) {
*/
  if (this_player()->query_guild_name() != 0) {
      write("You have already joined a Guild.\n");
   return 1; }
   if(present("badge", this_player())) {
     write("You are already a member.\n");
     return 1;
     }
    if(this_player()->query_level() < 3) {
       write("You must be level 3 to join a guild.\n");
       return 1;
    }
   write("You have just joined the Guild of Dopplegangers!!!\n");
   badge = clone_object("/players/grimm/closed/obj/badge");
   move_object(badge,this_player());
   write_file("/players/grimm/closed/LOGS/guild",capitalize(this_player()->query_real_name())+" just joined the guild.\nThe time is: "+ctime(time())+".\n-------------------\n");
   this_player()->add_guild_exp(1);
   this_player()->set_guild_name("doppleganger");
  this_player()->add_guild_rank(1);
    tell_em("joined");
return 1; 
}

scrap(str) {
  string ln,it,what;
  int j,i;
  if(!str) what="unjoined";
  else what=str;
  i=0;
  j=1;
  ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
  while(ln) {
    if(ln==this_player()->query_real_name()+"\n") {
      i=1;
      write_file("/players/grimm/closed/obj/badge_stuff/reg.tmp",this_player()->query_real_name()+"  ->  "+what+"\n");
    } else write_file("/players/grimm/closed/obj/badge_stuff/reg.tmp",ln);
    j++;
    ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
  }
  if(i) {
    rm("/players/grimm/closed/obj/badge_stuff/register");
    cp("/players/grimm/closed/obj/badge_stuff/reg.tmp",
       "/players/grimm/closed/obj/badge_stuff/register");
    rm("/players/grimm/closed/obj/badge_stuff/reg.tmp");
  } else
    write_file("/players/grimm/closed/obj/badge_stuff/register",
               this_player()->query_real_name()+"  ->  "+what+"---FRIED!\n");
  return 1;
}

unjoin() {
object badge;
int exp,minus;
if(!present("badge", this_player())) {
  write("You have to be a member of the dopplegangers to unjoin it.\n");
  return 1;
}
tell_em("unjoined");
write_file("/players/grimm/closed/LOGS/unguild",capitalize(this_player()->query_real_name())+" had "+this_player()->query_guild_exp()+" guild exp when he unjoined.\nThe time is: "+ctime(time())+"\n------------------------------\n");
exp = this_player()->query_exp();
minus = exp/6;
this_player()->add_exp(-minus);
badge = present("badge",this_player());
destruct(badge);
this_player()->set_title("[Dopple TRAITOR!]");
this_player()->set_al_title("[Don't Trust me!]");
this_player()->set_guild_name(0);
#if 0 /* Rumplemintz */
this_player()->add_guild_exp(-this_player()->query_guild_exp());
this_player()->add_guild_rank(-this_player()->query_guild_rank());
#else
  this_player()->set_guild_rank(0);
  this_player()->set_guild_exp(0);
#endif
write("You have just unjoined the doppleganger's guild.\n");
return 1;
}
tell_em(str) {
string people;
int n;
people = users();
for(n=0;n<sizeof(people);n++) {
  if(present("badge",people[n])) {
    tell_object(people[n],"[Grimm's Assistant]: "+capitalize(this_player()->query_real_name())+" just "+str+" the guild!\n");
  }
}
}

cost() {
if(!present("badge",this_player())) {
  write("You are not a member of the guild yet...type \"join\"\n");
  return 1;
}
write(
"                        Costs to advance in the guild (in exp)\n"+
"                        --------------------------------------\n"+
"                        Level 1 ..........................Free\n"+
"                        Level 2 ......................... 5000\n"+
"                        Level 3 ........................ 15000\n"+
"                        Level 4 ........................ 30000\n"+
"                        Level 5 ........................ 50000\n"+
"                        Level 6 ........................ 75000\n"+
"                        Level 7 ....................... 105000\n"+
"                        Level 8 ....................... 140000\n"+
"                        Level 9 ....................... 180000\n"+
"                        --------------------------------------\n"+
"                        You currently have:       "+this_player()->query_guild_exp()+" exp.\n\n"+
"\n");
return 1;
}

/* Recoded this to use the adv_guild and exlv_guild functions to determine
   free exp instead of if/else statement - Rumplemintz */
#if 1
int swap(string str) {
  int amount, minexp;

  if ((string)this_player()->query_guild_name() != "doppleganger") {
    write("You are not a member...type \"join\"\n");
    return 1;
  }
  if (!str) {
    write("How much experience do you want to swap to guild experience?\n");
    return 1;
  }
  if (sscanf(str, "%d", amount) != 1) {
    write("Usage: swap <amount>\n");
    return 1;
  }
  if (amount <= 0) {
    write("You must swap a positive amount.\n");
    return 1;
  }
  if (this_player()->query_extra_level() < 1)
    minexp = (int)this_player()->query_exp() -
             (int)call_other("room/adv_guild",
                             "get_next_exp",
                             (int)this_player()->query_level() - 1);
  else
    minexp = (int)this_player()->query_exp() -
             (int)call_other("room/exlv_guild",
                             "get_next_exp",
                             (int)this_player()->query_extra_level() - 1);
  if (amount < -minexp) {
    write("You don't have enough experience available to swap that much.\n");
    write("You may swap a total of " + ((int)this_player()->query_exp() -
                                        minexp) + ".\n");
    return 1;
  }
  if ((int)this_player()->query_guild_exp() >= 180000) {
    write("You have already swapped the maximum amount.\n");
    return 1;
  }
  write_file("/players/grimm/closed/LOGS/swaps",
             capitalize((string)this_player()->query_real_name()) +
             " just swapped " + amount + " exp.\n"+
             "The time is : " + ctime(time()) + "\n" +
             "---------------------------------------------------\n\n");
  this_player()->add_exp(-amount);
  this_player()->add_guild_exp(amount);
  write("Thank you for using Dopplerz 'R Us Swapping Credit Union.\n");
  return 1;
}
#else
swap(str) {
int a,x,y,z;
if(!present("badge",this_player())) {
  write("You are not a member...type \"join\"\n");
  return 1;
}
if (!str) {
write("How much do you want to swap?\n");
return 1;
}
sscanf(str,"%d",x);
y=this_player()->query_exp();
z=this_player()->query_level();
if(z==1) a=0;
else if(z==2) a=1014;
else if(z==3) a=1771;
else if(z==4) a=2332;
else if(z==5) a=5885;
else if(z==6) a=12812;
else if(z==7) a=26662;
else if(z==8) a=39993;
else if(z==9) a=59995;
else if(z==10) a=90000;
else if(z==11) a=134998;
else if(z==12) a=195591;
else if(z==13) a=295592;
else if(z==14) a=492294;
else if(z==15) a=620026;
else if(z==16) a=820028;
else if(z==17) a=1040028;
else if(z==18) a=1367106;
else if(z==19) a=2000000;
else a=0;
if(y-x<a) {
  write("You do not have enough exp to swap that much.\n"+
        "You may swap a total of "+(y-a)+".\n");
  return 1;
}
if (x < 1) {
   write("You may not sway negative exp.\n");
   return 1;
}
write_file("/players/grimm/closed/LOGS/swaps",capitalize(this_player()->query_real_name())+" just swapped "+x+" exp.\nThe time is: "+ctime(time())+"\n-----------------------\n");
this_player()->add_exp(-x);
this_player()->add_guild_exp(x);
write("Thank you for using Dopplerz 'R Us Swapping Credit Union.\n");
return 1;
}
#endif /* Rumplemintz changes */

advance() {
int x, y, z;
if(!present("badge",this_player())) {
  write("You are not a member...type \"join\"\n");
  return 1;
}
x = this_player()->query_guild_exp();
y = this_player()->query_guild_rank();
if(y==1) z = 4999;
else if(y==2) z = 14999;
else if(y==3) z = 29999;
else if(y==4) z = 49999;
else if(y==5) z = 74999;
else if(y==6) z = 104999;
else if(y==7) z = 139999;
else if(y==8) z = 179999;
if(x>z) {
  if(y<9) {
    write("You are now level "+(y+1)+" in the guild!\n");
     write_file("/players/grimm/closed/LOGS/advanced",capitalize(this_player()->query_real_name())+" just made level "+(y+1)+" in the guild.\nThe time is: "+ctime(time())+"\n--------------------------------------\n");
    tell_em("advanced in");
    this_player()->add_guild_rank(1);
  } else {
    write("You are the highest level possible in the guild.\n");
  }
} else {
  write("You do not have enough exp on account to advance yet.\n");
}
return 1;
}

rejoin() {
  object per;
  string ln;
  int i,j;
  per=this_player();
  if(present("badge",per)) {
    write("You do not need to rejoin.\n");
    return 1;
  }
/*
  i=0;
  j=1;
  ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
  while(ln && !i) {
    j++;
    ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
    if(ln==per->query_real_name()+"\n") i=1;
  }
*/
  if(!(this_player()->query_guild_name()=="doppleganger")) {
    write("You were not found in the guild's register.\n");
  } else
  { write("Your name was found in the register. Management stresses its\n");
    write("appologies.\n");
    move_object(clone_object("/players/grimm/closed/obj/badge"),per);
    tell_em("rejoined");
  }
  return 1;
}

register() {
  int i,j;
  string ln;
  if(!present("badge",this_player())) {
    write("You must first join the guild.\n");
    return 1;
  }
  i=0;
  j=1;
  ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
  while(ln && i==0) {
    j++;
    ln=read_file("/players/grimm/closed/obj/badge_stuff/register",j);
    if(ln==this_player()->query_real_name()+"\n") i=1;
  }
  if(!i) {
    write_file("/players/grimm/closed/obj/badge_stuff/register",this_player()->query_real_name()+"\n");
    write("You name has been added to the register.\n");
  }
  else {
    write("Your name was already in the register.\n");
  }
  return 1;
}
