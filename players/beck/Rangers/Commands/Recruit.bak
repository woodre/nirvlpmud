#include "/players/beck/Defs.h"
#include "/players/beck/Rangers/RangerDefs.h"

string *Banished;

RangerPower(string str, string align){

   
   string person;
   string type;
   object recruit;
   object comm;

   restore_object(RANGERDIR+"BANISHED");
   
   if(!Banished){
      Banished = ({});
   }


   if(!str){
      write("Syntax is 'recruit <person> <type>'.\n");
      return 1;
   }
   if(sscanf(str, "%s %s", person, type) != 2) {
      write("Syntax is 'recruit <person> <type>'.\n");
      return 1;
   }
   if(type == "ranger"){
      if(PO->QuerySkillLevel("leadership") < 15)
         return 0;

      if("/players/beck/Rangers/ViewingGlobe.c"->query_mn() >= MAXGUILD){
         write("The guild is full.\n");
         return 1;
      }
      if(!present(person, ENV(TP))){
         write("That person is not present.\n");
         return 1;
      }
      recruit = present(person, ENV(TP));

      if(!recruit->is_player()){
         write("You can only recruit players to become rangers.\n");
         return 1;
      }

      if(member_array(recruit->query_real_name(), Banished) != -1){
         write("That person has been Banished, and may not become a Power Ranger.\n");
         return 1;
      }

      if(recruit->query_guild_name() != 0){
         write("That person is not allowed to become a Ranger at this time.\n");
         write("They are a member of "+recruit->query_guild_name()+"\n");
         return 1;
      }

      if(recruit->query_level() > 10){
         write("Players must be level 10 or less to join the Power Rangers.\n");
         return 1;
      }
      tell_object(recruit, TP->query_name()+" has invited you to become a Power Ranger.\n"+
         "If you wish to accept this invitation type 'its_morphin_time'.\n");
      comm = clone_object("/players/beck/Rangers/RecruitObject.c");
      comm->set_recruit(recruit);
      comm->set_sponsor(TP->query_name());
      move_object(comm, recruit);
      write("You have given "+recruit->query_name()+" an invitation to join the Power Rangers.\n");
      return 1;

   }

      
   else if(type == "ally"){
      if(!present(person, ENV(TP))){
         write("That person is not present.\n");
         return 1;
      }
      recruit = present(person, ENV(TP));
      if(!recruit->is_player()){
         write("You can only recruit players as an ally.\n");
         return 1;
      }
      if(member_array(recruit->query_real_name(), Banished) != -1){
         write("That person has been Banished, and may not become an Ally.\n");
         return 1;
      }
      if(recruit->query_guild_name() != "bard" && recruit->query_guild_name() != "healer" && recruit->query_guild_name() != "Knights Templar"){
         write("That person is not allowed to become an Ally at this time.\n");
         return 1;
      }
      move_object(clone_object("/players/beck/Rangers/HonorRangerCommunicator.c"), recruit);
      CHANNEL->ChannelMessage("Power Ranger", BLUE+"["+OFF+RED+"ALLY"+OFF+BLUE+"] "+OFF+recruit->query_name()+" has become a Ranger Ally, sponsored by "+TP->query_name()+".\n");
      return 1;
   }
   else if(type == "banish"){
      Banished += ({ person });
      save_object(RANGERDIR+"BANISHED");
      if(find_living(person)){
         recruit = find_living(person);
         if(recruit->is_player()){
            if(present("honor_ranger_communicator", recruit)){
               comm = present("honor_ranger_communicator", recruit);
               destruct(comm);
               tell_object(recruit,"You are no longer a Power Ranger Ally.\n");
            }
         }
      }
      write(person+" has been added to the Banished list.\n");
      return 1;
   }
   else {
      write(type+" is not a valid command.\n");
   }
      
      
   return 1;
}

QRangerInfo(){ return 1; }

RangerInfo(){
   write("Recruit allows you to bring new members, allies, and kids (future) into\n"+
         "the Power Ranger guild.\n"+
         "It also allows you to banish such people from the guild.\n"+
         "This task requires responsibility, and should not be taken lightly.\n"+
         "Give serious thought, and consult other Rangers before recruiting or\n"+
         "banishing anyone.\n"+
         "\nCommands:\n\n"+
"recruit <person> ranger - Recruit a person to be a Power Ranger\n"+
"\n"+
         "recruit <person> ally    - recruit a person to be an ally\n"+
         "                           must be a bard, healer, or knight templar\n"+
         "recruit <person> banish  - Banished a person from being an Ally.\n"+
         "                           You may banish a person even if they are\n"+
         "                           not currently an Ally.\n"+
         "                           This will prevent future joining.\n"+
         "");
   return 1;
}


