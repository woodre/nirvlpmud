/*
 *      File:                   /obj/simul_efun/command_sfuns.c
 *      Function:               The sfuns pertaining to command system.
 *      Author(s):              Earwax@Nirvana
 *      Copyright:              Copyright (c) 2006 Earwax (David Halek)
 *                                      All Rights Reserved.
 *      Source:                 07/29/06
 *      Notes:                  
 *      Change History:
 */

#include <ansi.h>
#include <security.h>

/* Global Variables */
mapping  command_mapping,
         level_required;
string  *command_types;
status   flag_loaded;

/* 
 * Function name:
 * Description:
 * Arguments:
 * Returns:
 */

void load_command_arrays()
{
  int i;
  /*
  command_mapping = ([ 
    "/bin/secure/" :     get_dir("/bin/secure/_*.c"),
    "/bin/wiz/secure/" : get_dir("/bin/wiz/secure/_*.c"),
    "/bin/wiz/" :        get_dir("/bin/wiz/_*.c"),
    "/bin/play/" :       get_dir("/bin/play/_*.c"),
    "/bin/soul/" :       get_dir("/bin/soul/_*.c")
  ]);
  */

  level_required = ([ 
    "/bin/secure/" :     ELDER,
    "/bin/wiz/secure/" : CREATE,
    "/bin/wiz/" :        CREATE,
    "/bin/play/" :       0,
    "/bin/soul/" :       0
  ]);
  
  command_types = ({
    "/bin/secure/",
    "/bin/wiz/secure/",
    "/bin/wiz/",
    "/bin/play/",
    "/bin/soul/"
  });
     
  foreach(string type in command_types)
  {
    command_mapping[type] = get_dir(sprintf("%s_.c", type));
    i = -1;
    
    foreach(string cmd in command_mapping[type])
    {
      command_mapping[type][++i] = cmd[1..<3];
    }
  }
  
  flag_loaded = 1;
  write_file("/ldmud.log", sprintf("%s: Commands loaded without problem.\n", ctime()));
}

/* 
 * Function name:
 * Description:
 * Arguments:
 * Returns:
 */

varargs status execute_command(string verb, string arg, int level)
{
  int i;
  string err;
  string command_path, fun_to_call;
  
  if (!flag_loaded)
  {
    err = catch(load_command_arrays());
    
    if (err)
      write_file("/ldmud.log", sprintf("%s: Commands did not load:\n%s\n", ctime(), err));
  }
    
  if (sscanf(arg, "%s %s", verb, arg) != 2)
  {
    verb = arg;
    arg == "";
  }
    
  if (!verb) return 0;
  if (!arg) arg = "";
  if (level < 19) level = 19;
    
  foreach(string type in command_types)
  {
    printf("PROCESSING: %s (%d vs %d required)\n", type, level, level_required[type]);
    foreach(string blah in command_mapping[type]) { printf("%s\t", blah); }
    write("\n");
    if (level >= level_required[type] && ((i = member(command_mapping[type], verb) > -1)))
    {
      status t;
      
      command_path = sprintf("%s_%s.c", type, verb);
      fun_to_call = sprintf("cmd_%s", verb);
      t = ((int)call_other(command_path,fun_to_call,arg) > 0);
      printf("Command: %s->%s(\"%s\") returns: %d", command_path, fun_to_call, arg, t);
      return t;
    }
  }
  
  printf("Did not find: %s (%s)\n", verb, arg);
  return 0;
}