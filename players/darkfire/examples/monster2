This is the second, and rarely used, method of making monsters. The reason
for this is it makes 'killing zones' hard to produce, because you have to
rewrite the monster's configuration for every room. The third method solves
this problem, but not many people pay enough attention to notice that.

/* first, we have a room */
inherit "room/room";
reset(arg) {
  object monster;  /* variable monster is held in */
  if(arg) return ;
  set_light(1);
  short_desc = "A room";
  long_desc = "Just a generic room, with a monster.\n";
  dest_dir = 
  ({
  "room/church", "church"
  });
  monster = clone_object("obj/monster");  /*clone driver */
  monster->set_name("monster"); /* use call_other to configure */
  monster->set_alias("a monster");
  monster->set_short("A monster");
  monster->set_long("This is a long description.\n");
  monster->set_level(20);
  monster->set_wc(30);
  monster->set_ac(17);
  monster->set_hp(500);
  monster->set_ep(1000000);
  monster->set_al(-800);
  monster->load_chat("The monster yawns.\n");
  monster->set_chat_chance(20);
  move_object(clone_object("players/joebob/thingo"), monster);
  move_object(monster, this_object());
}
