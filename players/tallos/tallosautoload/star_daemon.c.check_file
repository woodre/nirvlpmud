#include "/players/pain/color.h"
#define tp this_player()
#define tpg this_player()->query_gender()
#define tpn this_player()->query_name()

fail() {
   write("That player must be present.\n");
   return 1;
}

cmd_say(str) {
   
   if(!str) {
      write("Usage: say <message>.\n");
      return 1;
   }
   
   say(tpn+" says: "+BOLD+RED+str+END+"\n");
   write("You say: "+BOLD+RED+str+END+"\n");
   return 1;
}

query_tag() {
  return YELLOW+"~*~"+END+BOLD+"-*-"+END+YELLOW+"~*~"+END;
}
object * query_stars() {
  int s;
  object *us, gob, *peeps;
  peeps = ({ });
  s = sizeof(us = users());
  while(s --) {
    if(us[s] && (gob=present("star_tattoo", us[s])) &&
       !gob->query_muff())
    {
      peeps += ({ us[s] });
    }
  }
  return peeps;
}


void add_history(string str) {
  "/obj/user/chistory"->add_history("star", str);
}


/*
New Version of the Star Channel
*/

star(str) {
   string message;
   string message2;
   string channel;
   object ob;
   object patch;
   int x;
   int index;
   
   channel = "star";
   
   if(!str) return 0;
   if(str == "list") return list_users();
   if(str == "history") {
      write((string)"/obj/user/chistory.c"->query_history(channel));
      write("\n");
      return 1;
   }
   if(tp->query_muff() == 1) { return 1;}
   if(str[0] == ':')  {
    string em, arg, file;
    
    str = str[1..strlen(str)-1];
    if(sscanf(str, "%s %s", em, arg) != 2) {
      em = str;
    }

    em = implode(explode(em, "."), "");
    if(check_file(file="/bin/soul/_"+em+".c") > 0) {
      return (int)file->guildcast("star", arg);
    }
      message = YELLOW+"~*~"+END+BOLD+"-*-"+END+YELLOW+"~*~"+END+" "+tpn+" "+str;
      message2 = "~*~-*-~*~ "+tpn+" "+str;
   }
   else {
      message = YELLOW+"~*~"+END+BOLD+tpn+END+YELLOW+"~*~:"+END+" "+str;
      message2 = "~*~"+tpn+"~*~: "+str;
   }
   "/obj/user/chistory.c"->add_history(channel,message2+"\n");
   ob = users();
   for( x = 0; x < sizeof(ob); x += 1) {
      if(present("star_tattoo", ob[x])){
         patch = present("star_tattoo", ob[x]);
         if(patch->query_muff() == 0) {
            if(patch->query_color() == 0)
               tell_object(ob[x],message+"\n");
            else
               tell_object(ob[x],message2+"\n");
         }
       }
   }
   return 1;
}

list_users() {
   int index;
   object *people;
   string str;
   
   str = "Star channel listeners : ";
   people = users();
   for (index = sizeof(people) - 1; index >= 0; index--)
   if(present("star_tattoo", people[index]) && present("star_tattoo",people[index])->query_muff() == 0)
      if (!people[index]->query_invis() || this_player() && this_player()->query_level() > 999)
      str += people[index]->query_name() + (index ? ", " : " ");
   write(format(str));
   return 1;
}


squeal(str) {
   
   object ob;
   
   if(!str) {
      write("You squeal in delight!\n");
      say(tpn+" squeals in delight!\n");
      return 1;
   }
   
   ob = present(str, environment(tp));
   
   if(!ob) {
      write("Sorry, "+str+" not present.\n");
      return 1;
   }
   
   write("You squeal in delight at "+ob->query_name()+"!\n");
   tell_object(ob, tpn+" squeals in delight at you!\n");
   say(tpn+" squeals in delight at "+ob->query_name()+"!\n");
   return 1;
}

mgrin(str) {
   
   object ob;
   
   if(!str) {
      write("You grin mischeviously.\n");
      say(tpn+" grins mischeviously.\n");
      return 1;
   }
   
   ob = present(str,environment(tp));
   if(!ob) {
      write("Sorry, "+str+" is not here.\n");
      return 1;
   }
   
   write("You grin mischeviously at "+ob->query_name()+".\n");
   tell_object(ob,tpn+" grins mischeviously at you.\n");
   say(tpn+" grins mischeviously at "+ob->query_name()+".\n");
   return 1;
}

grumble(str) {
   
   object ob;
   
   if(!str) {
      write("You grumble about something or other.\n");
      say(tpn+" grumbles about something or other.\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      write("How can you grumble about "+str+" when they aren't here?\n");
      return 1;
   }
   write("You grumble about "+ob->query_name()+".\n");
   tell_object(ob, tpn+" grumbles about you.\n");
   say(tpn+" grumbles about "+ob->query_name()+".\n");
   return 1;
}
drool(str) {
   
   object ob;
   
   if(!str) {
      write("You drool!\n");
      say(tpn+" drools!\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      write("You cannot drool on someone not here!\n");
      return 1;
   }
   write("You drool all over "+ob->query_name()+"!\n");
   tell_object(ob, tpn+" drools all over you!\n");
   say(tpn+" drools all over "+ob->query_name()+"!\n");
   return 1;
}

mango(str) {
   
   object ob;
   
   if(!str) {
      write("You menacingly wield a mango and eye the room.\n");
      say(tpn+" menacingly wields a mango and eyes the room.\n");
      return 1;
   }
   ob = find_living(str);
   if(!ob) {
      write("You wanna do what?!?\n");
      return 1;
   }
   write("You toss a sizeable mango at "+ob->query_name()+" and laf as it splats!\n");
   tell_object(ob, tpn+" tosses a mango at you! It splatters all over your face!\n");
   say(ob->query_name()+" gets hit by a mango thrown by "+tpn+"!\n");
   return 1;
}

dream(str) {
   string pronoun;
   object ob;
   
   
   if(tpg == "male") pronoun = "his";
   else pronoun = "her";
   
   if(!str) {
      write("You close your eyes and smile thinking of a better place.\n");
      say(tpn+" closes "+pronoun+" eyes and smiles thinking of a better place.\n");
      return 1;
   }
   
   ob = present(str,environment(tp));
   if(!ob) {
      write("Who you dreaming of?\n");
      return 1;
   }
   
   write("You think "+ob->query_name()+" is dreamy.\n");
   tell_object(ob, tpn+" thinks you are dreamy.\n");
   say(tpn+" thinks that "+ob->query_name()+" is dreamy.\n");
   return 1;
}

nudge(str) {
   
   object ob;
   
   if(!str) {
      write("Who ya gonna nudge?\n");
      return 1;
   }
   
   ob = present(str,environment(tp));
   if(!ob) {
      write("Who ya gonna nudge?\n");
      return 1;
   }
   write("You nudge "+ob->query_name()+".\n");
   tell_object(ob, tpn+" nudges you.\n");
   say(tpn+" nudges "+ob->query_name()+".\n");
   return 1;
}

mutter(str) {
   
   object ob;
   
   if(!str) {
      write("You mutter something under your breath.\n");
      say(tpn+" mutters something\n");
      return 1;
   }
   ob = present(str, environment(tp));
   if(!ob) {
      write("Who do you want to mutter about?\n");
      return 1;
   }
   write("You mutter about "+ob->query_name()+" under your breath.\n");
   tell_object(ob, tpn+" mutters about you.\n");
   say(tpn+" mutters about "+ob->query_name()+".\n");
   return 1;
}

nog(str) {
   
   object ob;
   
   if(!str) {
      write("You nog!\n");
      say(tpn+" nogs!\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You nog at "+ob->query_name()+".\n");
   tell_object(ob, tpn+" nogs at you.\n");
   say(tpn+" nogs at "+ob->query_name()+".\n");
   return 1;
}

fnog(str) {
   object ob;
   
   if(!str) {
      write("You fucking nog!\n");
      say(tpn+" fucking nogs!\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You fucking nog at "+ob->query_name()+".\n");
   tell_object(ob, tpn+" fucking nogs at you.\n");
   say(tpn+" fucking nogs at "+ob->query_name()+".\n");
   return 1;
}

hnog(str) {
   object ob;
   
   if(!str) {
      write("You send out a few hard nogs to the room!\n");
      say(tpn+" sends out a few hard nogs to the room!\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You send a few hard nogs out to "+ob->query_name()+".\n");
   tell_object(ob, tpn+" send a few hard nogs out to you.\n");
   say(tpn+" send a few hard nogs out to "+ob->query_name()+".\n");
   return 1;
}

girn(str) {
   object ob;
   
   if(!str) {
      write("You girn lively like the moron you are.\n");
      say(tpn+" girns lively like a moron.\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You girn lively at "+ob->query_name()+" like a fool.\n");
   tell_object(ob,tpn+" girns lively at you like a fool.\n");
   say(tpn+" girns lively at "+ob->query_name()+" like a fool.\n");
   return 1;
}

laf(str) {
   object ob;
   
   if(!str) {
      write("You laf.\n");
      say(tpn+" lafs.\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You laf at "+ob->query_name()+".\n");
   tell_object(ob,tpn+" lafs at you.\n");
   say(tpn+" lafs at "+ob->query_name()+".\n");
   return 1;
}

flaf(str) {
   object ob;
   
   if(!str) {
      write("You fucking laf.\n");
      say(tpn+" fucking lafs.\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You fucking laf at "+ob->query_name()+".\n");
   tell_object(ob,tpn+" fucking lafs at you.\n");
   say(tpn+" fucking lafs at "+ob->query_name()+".\n");
   return 1;
}

ravish(str) {
   object ob;
   
   if(!str) {
      write("Usage: ravish <who>\n");
      return 1;
   }
   ob = present(str, environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You ravish "+ob->query_name()+" lustily!!\n");
   tell_object(ob, tpn+" ravishes you lustily!!\n");
   say(tpn+" ravishes "+ob->query_name()+" lustily!!\n");
   return 1;
}

caress(str) {
   object ob;
   string who, where;
   
   /* next line added by verte 6.12.01 */
   if(!str)
      {
      notify_fail("Caress who where?\n");
      return 0;
   }
   sscanf(str, "%s %s", who, where);
   if(!who) {
      write("Usage: caress <who> <where>\n");
      return 1;
   }
   ob = present(who,environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   if(!where) {
      write("You caress "+ob->query_name()+" lovingly.\n");
      tell_object(ob, tpn+" caresses you lovingly.\n");
      say(tpn+" caresses "+ob->query_name()+" lovingly.\n");
      return 1;
   }
   write("You caress "+ob->query_name()+"'s "+where+" lovingly.\n");
   tell_object(ob, tpn+" caresses your "+where+" lovingly.\n");
   say(tpn+" caresses "+ob->query_name()+"'s "+where+" lovingly.\n");
   return 1;
}

model(str) {
   object ob;
   if(!str){
      if(tpg == "female"){
         write("You model your sexy "+YELLOW+"teddy"+END+" for all those in the room"+
            " to see!\n");
         say(tpn+" models her sexy "+YELLOW+"teddy"+END+" for all those in the room"+
            " to see!\n");
         return 1;
      }
      if(tpg == "male"){
         write("You model your skimpy "+YELLOW+"thong"+END+" for all of the women in"+
            " room to see!\n");
         say(tpn+" models a skimpy "+YELLOW+"thong"+END+" for all the women in the"+
            " room to see!\n");
         return 1;
      }
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   if(tpg == "female"){
      write("You strip down to your "+YELLOW+"teddy"+END+" and give "+
         ob->query_name()+" a nice show!\n");
      say(tpn+" strips down to her "+YELLOW+"teddy"+END+" and puts on a nice"+
         " show for "+ob->query_name()+"!\n");
      tell_object(ob,"You smile in delight as "+tpn+" slides her clothes off"+
         " and models her "+YELLOW+"teddy"+END+" for you.\n");
      tell_object(ob,"You stare at her body and begin to drool!\n");
      write("You smile in delight as you see that "+ob->query_name()+
         " begins to drool over your scantily clad body.\n");
      say(ob->query_name()+" begins to drool as he watches "+tpn+
         "'s "+YELLOW+"hot"+END+" body.\n");
      return 1;
   }
   if(tpg == "male"){
      write("You strip down to your "+YELLOW+"thong"+END+" and model"+
         " it for "+ob->query_name()+"!\n");
      say(tpn+" strips down to his "+YELLOW+"thong"+END+" and models"+
         " it for "+ob->query_name()+"!\n");
      tell_object(ob, tpn+" strips down to his "+YELLOW+"thong"+END+
         " and dances sexily for you!\n");
      tell_object(ob, "You feel yourself begin to drool as you eye"+
         " the bulge in "+tpn+"'s thong!\n");
      write("You smile with delight as you notice "+ob->query_name()+
         " drooling at you.\n");
      say(ob->query_name()+" drools in lust eying the bulge in "+tpn+
         "'s "+YELLOW+"thong"+END+"!\n");
      return 1;
   }
   return 1;
}

wedgie(str){
   object ob;
   string obg;
   if(!str){
      write("You shouldn't give yourself a wedgie <sicko> \n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   obg = ob->query_gender();
   
   if(obg == "male"){
      write("You grab "+ob->query_name()+"'s underwear and pull them "+
         "up over his head!\n");
      tell_object(ob, tpn+" grabs your underwear and pulls the up over "+
         "your head!\n");
      tell_object(ob, "You scream out in pain and your underwear is lodged"+
         " up your ass.\n");
      say(tpn+" grabs "+ob->query_name()+"'s underwear and pulls them up "+
         "over his head.\n");
      say(ob->query_name()+" screams out in pain as his underwear is lodged "+
         "up his ass in the "+YELLOW+"wedgie"+END+" from hell!\n");
      return 1;
   }
   if(obg == "female"){
      write("You playfully grab "+ob->query_name()+"'s underwear and give "+
         "her a sexy little wedgie.\n");
      tell_object(ob, tpn+" playfully grabs your underwear and gives you a "+
         YELLOW+"sexy wedgie"+END+"!\n");
      say(tpn+" grabs "+ob->query_name()+"'s underwear and gives her a "+YELLOW+"sexy wedgie"+END+"!\n");
      write("You offer to help "+ob->query_name()+" get rid of the "+YELLOW+
         "wedgie"+END+".\n");
      tell_object(ob, tpn+" offers to help take care of your "+YELLOW+
         "wedgie"+END+".\n");
      say(tpn+" offers to help "+ob->query_name()+" take care of her "+YELLOW+
         "wedgie"+END+".\n");
      return 1;
   }
   return 1;
}

kinky(){
   write("You say: Oh my! how "+GREEN+"K I N K Y"+END+"! ! !\n");
   say(tpn+" says: Oh my! how "+GREEN+"K I N K Y"+END+"! ! !\n");
   return 1;
}

grok(){
   write("You "+LIGHT_BLUE+"grok"+END+" solemnly.\n");
   say(tpn+" "+LIGHT_BLUE+"groks"+END+" solemnly.\n");
   return 1;
}

whip(str){
   object ob;
   
   if(!str) {
      write("You whip the room up into a "+YELLOW+"frenzy"+END+"!\n");
      say(tpn+" whips everyone in the room into a "+YELLOW+"frenzy"+
         END+"!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You whip "+ob->query_name()+" into a "+YELLOW+"frenzy"+
      END+"!\n");
   tell_object(ob, tpn+" whips you into a "+YELLOW+"frenzy"+END+"!\n");
   say(tpn+" whips "+ob->query_name()+" into a "+YELLOW+"frenzy"+END+"!\n");
   return 1;
}
cuff(str){
   object ob;
   string obg;
   string pronoun;
   
   if(!str){
      write("You take out a pair of shiny "+YELLOW+"hand cuffs"+END+
         " and twirl them around your finger.\n");
      say(tpn+" takes out a pair of "+YELLOW+"hand cuffs"+END+" and"+
         " twirls them around, eyeing you evilly.\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   obg = ob->query_gender();
   if(obg == "male") { pronoun = "his"; }
   if(obg == "female") { pronoun = "her"; }
   if(tpg == "male"){
      write("You take out your "+YELLOW+"hand cuffs"+END+" and "+
         "stroll over to "+ob->query_name()+" seductively.\n");
      tell_object(ob, tpn+" takes some "+YELLOW+"hand cuffs"+END+
         " out of his pocket and seductively walks over to you.\n");
      say(tpn+" takes some "+YELLOW+"hand cuffs"+END+" out of his pocket "+
         "and walks seductively over to "+ob->query_name()+".\n");
      write("You offer to take "+pronoun+" to your hotel room and "+
         "to show "+pronoun+" how you like to use your "+YELLOW+
         "cuffs"+END+".\n");
      tell_object(ob, tpn+" offers to take you to his hotel room and show "+
         "you how to use his "+YELLOW+"cuffs"+END+".\n");
      say(tpn+" offers to take "+ob->query_name()+" to his hotel room "+
         "and show "+pronoun+" how to use his "+YELLOW+"cuffs"+END+
         ".\n");
      return 1;
   }
   if(tpg == "female"){
      write("You take your "+YELLOW+"hand cuffs"+END+" out and sexily "+
         "walk over to "+ob->query_name()+".\n");
      tell_object(ob, tpn+" takes some "+YELLOW+"hand cuffs"+END+" out of "+
         "her pocket and sexily walks over to "+ob->query_name()+".\n");
      say(tpn+" takes some "+YELLOW+"hand cuffs"+END+" out of her pocket "+
         "and walks sexily over to "+ob->query_name()+".\n");
      write("You offer to take "+ob->query_name()+" to your hotel "+
         "to show "+pronoun+" how you like to use your "+YELLOW+
         "cuffs"+END+".\n");
      tell_object(ob, tpn+"offers to take you to her hotel room to "+
         "show you how she likes to use her "+YELLOW+"cuffs"+END+
         ".\n");
      say(tpn+" offers to take "+ob->query_name()+" to her hotel room "+
         "so she can show "+pronoun+" how she likes to use her "+YELLOW+
         "cuffs"+END+".\n");
      return 1;
   }
}
suck(str){
   object ob;
   string obg, pronoun;
   if(!str){
      write(YELLOW+"That is DISGUSTING... you should NOT do that to "+
         "yourself! ! !"+END+"\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   obg = ob->query_gender();
   if(obg == "male") { pronoun = "his"; }
   if(obg == "female") { pronoun = "her"; }
   if(tpg == "male" && obg == "male"){
      write("Ummm... I think I would prefer if you NOT do that "+
         "to another guy... thanks.\n");
      return 1;
   }
   if(tpg == "female" && obg == "female"){
      write("Ummm... I think I would prefer if you NOT do that "+
         "to another girl... thanks.\n");
      return 1;
   }
   if(tpg == "male" && obg == "female"){
      write("You suck on "+ob->query_name()+"'s "+YELLOW+"golden "+
         "mounds of heavenly joy"+END+"!\n");
      tell_object(ob, tpn+" sucks on your "+YELLOW+"golden mounds of "+
         "heavenly joy"+END+"!\n");
      say(tpn+" sucks on "+ob->query_name()+"'s "+YELLOW+"golden mounds "+
         "of heavenly joy"+END+"!\n");
      return 1;
   }
   if(tpg == "female" && obg == "male"){
      write("You get down on your knees and suck "+ob->query_name()+
         "'s "+YELLOW+"rod of loving joy"+END+"!\n");
      tell_object(ob, tpn+" gets down on her knees and sucks your "+
         YELLOW+"rod of loving joy"+END+" thouroughly!\n");
      say(tpn+" sucks "+ob->query_name()+"'s "+YELLOW+"rod of loving joy "+
         END+"thouroughly!\n");
      return 1;
   }
}

horny(){
   write("You appear to be very horny!\n");
   say(tpn+" appears to be very "+GREEN+"horny"+END+"!\n");
   return 1;
}

tongue(str){
   object ob;
   if(!str){
      write("You stick out your tongue as an offering to the room.\n");
      say(tpn+" sticks out his tongue as an offering to the room.\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You offer to show "+ob->query_name()+" all the interesting things that you can do with your tongue!\n");
   tell_object(ob, tpn+" offers to show you all the interesting things that can be done with the human tongue!\n");
   say(tpn+" offers to show "+ob->query_name()+" all the interesting things that can be done with the human tongue!\n");
   return 1;
}

agree(str){
   object ob;
   if(!str){
      write("You nod your head in agreement.\n");
      say(tpn+" nods in agreement.\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You nod in agreement with "+ob->query_name()+".\n");
   say(tpn+" nods in agreement with "+ob->query_name()+".\n");
   return 1;
}

foff(str){
   object ob;
   if(!str){
      write("You tell everyone in the room to "+YELLOW+"fuck off"+END+"!\n");
      say(tpn+" tells everyone to "+YELLOW+"fuck off"+END+"!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You tell "+ob->query_name()+" to fuck off!\n");
   tell_object(ob, tpn+" tells you to fuck off!\n");
   say(tpn+" tells "+ob->query_name()+" to fuck off!\n");
   return 1;
}

swiggle(str){
   object ob;
   if(!str){
      write("You wiggle sexily around the room!\n");
      say(tpn+" wiggles sexily around the room!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You wiggle sexily all over "+ob->query_name()+"'s body!\n");
   tell_object(ob, tpn+" wiggles sexily all over your body!\n");
   say(tpn+" wiggles sexily all over "+ob->query_name()+"'s body!\n");
   return 1;
}

toss(){
   write("You toss your cookies!\n");
   say(tpn+" "+GREEN+"t"+END+BLUE+"o"+END+WHITE+"s"+END+YELLOW+"s"+END+YELLOW+
      "e"+END+LIGHT_BLUE+"s"+END+" their cookies!\n");
   return 1;
}

wibble(str){
   object ob;
   if(!str) {
      write("You wibble about the room!\n");
      say(tpn+" wibbles about the room!\n");
      return 1;
   }
   ob = present(str, environment(tp));
   if(!ob) {
      fail();
      return 1;
   }
   write("You wibble about "+ob->query_name()+".\n");
   tell_object(ob, tpn+" wibbles around you.\n");
   say(tpn+" wibbles around "+ob->query_name()+".\n");
   return 1;
}

lake(str){
   object ob;
   if(!str){
      write("You throw yourself into a nearby "+BLUE+"lake"+END+"!\n");
      say(tpn+" throws himself into a nearby "+BLUE+"lake"+END+"!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You throw "+ob->query_name()+" into a nearby "+BLUE+"lake"+END+"!\n");
   tell_object(ob, tpn+" throws you into a nearby "+BLUE+"lake"+END+"!\n");
   say(tpn+" throws "+ob->query_name()+" into a nearby "+BLUE+"lake"+END+"!\n");
   return 1;
}

snort(){
   write("You snort loudly and feel much better!\n");
   say(tpn+" snorts loudly and feels better!\n");
   return 1;
}

face(str){
   object ob;
   if(!str){
      write("You shout: 'In Your Face' to the entire room!\n");
      say(tpn+" shouts: 'In Your Face' to the entire room!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You shout: 'In Your Face' to "+ob->query_name()+".\n");
   tell_object(ob, tpn+" shouts: 'In Your Face' to you.\n");
   say(tpn+" shouts: 'In Your Face' to "+ob->query_name()+".\n");
   return 1;
}

boot(str){
   object ob;
   if(!str){
      write("Usage: boot <playername>.\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You boot "+ob->query_name()+" in the head.... it hurts!\n");
   tell_object(ob, tpn+" boots you in the head... OUCH it hurts!\n");
   say(tpn+" boots "+ob->query_name()+" in the head... it looks painful!\n");
   return 1;
}

lambada(str){
   object ob;
   if(!str){
      write("You do the lambada all by yourself... how sad!\n");
      say(tpn+" does the lambada alone.... how sad!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You "+YELLOW+"lambada"+END+" sexily with "+ob->query_name()+"!\n");
   tell_object(ob, tpn+YELLOW+" lambadas"+END+" sexily with you!\n");
   say(tpn+YELLOW+" lambadas"+END+" sexily with "+ob->query_name()+"!\n");
   return 1;
}

roll(){
   write("You roll your eyes!\n");
   if(tpg == "male"){
      say(tpn+" rolls his eyes!\n");
      return 1;
   }
   if(tpg == "female") {
      say(tpn+" rolls her eyes!\n");
      return 1;
   }
}

mood(){
   write("You proclaim to the world that: You are in the mood!\n");
   say(tpn+" appears to be in the mood for romance!\n");
   return 1;
}

kissme(str){
   object ob;
   if(!str){
      write("You say: Kiss Me I'm "+GREEN+"Irish"+END+"!\n");
      say(tpn+" says: Kiss me I'm "+GREEN+"Irish"+END+"!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You say: Kiss Me I'm "+GREEN+"Irish"+END+" to "+ob->query_name()+"\n");
   tell_object(ob, tpn+"says: Kiss Me I'm "+GREEN+"Irish"+END+" to you sexily!\n");
   say(tpn+" sexily says: Kiss Me I'm "+GREEN+"Irish"+END+" to "+ob->query_name()+".\n");
   return 1;
}

nasty(){
   write("You go: '"+YELLOW+"N*A*S*T*Y"+END+" !'\n");
   say(tpn+" goes: '"+YELLOW+"N*A*S*T*Y"+END+" !\n");
   return 1;
}

mosh(){
   write("You mosh wildly to the sounds of the underground!\n");
   say(tpn+" moshes wildly to the sounds of the underground!\n");
   return 1;
}

rave(){
   write("You dance wildly to the rave music in your head!\n");
   say(tpn+" dances wildly to the rave music you cannot hear!\n");
   return 1;
}

bummer(){
   write("You go: Bummer!\n");
   say(tpn+" goes: Bummer!\n");
   return 1;
}

sucks(){
   write("You go: Sucks to be you!\n");
   say(tpn+" goes: Sucks to be You!\n");
   return 1;
}

boring(){
   write("You go: 'B-O-R-I-N-G!'\n");
   say(tpn+" goes: B-O-R-I-N-G!'\n");
   return 1;
}

wonder(){
   write("You wonder if it is at all possible to ever be as kewl as Pain!\n");
   say(tpn+" wonders if it is at all possible to ever be as kewl as Pain!\n");
   return 1;
}

sdance(str){
   object ob;
   if(!str){
      write("You do a "+YELLOW+"sexy dance"+END+" to entertain those in the room!\n");
      say(tpn+" does a "+YELLOW+"sexy dance"+END+" to keep you entertained!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You do a "+YELLOW+"sexy dance"+END+" for "+ob->query_name()+"!\n");
   tell_object(ob, tpn+" does a "+YELLOW+"sexy dance"+END+" just for you!\n");
   say(tpn+" does a "+YELLOW+"sexy dance"+END+" just for "+ob->query_name()+"!\n");
   return 1;
}

tstick(str){
   object ob;
   if(!str){
      write("You stick out your tongue!\n");
      say(tpn+" sticks out their tongue!\n");
      return 1;
   }
   ob = present(str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You stick you tongue out at "+ob->query_name()+"!\n");
   tell_object(ob, tpn+" sticks his tongue out at you!\n");
   say(tpn+" sticks its tongue out at "+ob->query_name()+"!\n");
   return 1;
}

replace(){
   object new_patch;
   new_patch = clone_object("players/pain/NEW/items/star");
   move_object(new_patch, this_player());
   write(YELLOW+"You rub your old star tattoo and it looks new.\n"+END);
   destruct(this_object());
   return 1;
}

replace_all(){
   object ob, star;
   int i;
   
   if(this_player()->query_real_name() == "pain"){
      write("The tattoos are being renewed!\n");
      ob = users();
      for(i = 0; i < sizeof(ob); i++){
         star = present("star_tattoo", ob[i]);
         if(star) {
            tell_object(ob[i], "Your star tattoo is being renewed!\n");
            command("s_replace", ob[i]);
          }
      }
   }
   return 1;
}

star_news(){
   cat("/players/pain/NEW/items/star_news");
   return 1;
}

get_rid_of_star(){
   destruct(this_object());
   return 1;
}

hstar(){
   cat("/players/pain/NEW/items/star_help");
   return 1;
}

ick(){
   write("You stick out your tongue and go '"+YELLOW+"Ick"+END+"!'\n");
   say(tpn+" goes '"+YELLOW+"Ick"+END+"!'\n");
   return 1;
}

yuck(){
   write("You are totally disgusted and make a Mr. Yuck face   '"+GREEN+"YUCK"+END+"!'\n");
   say(tpn+" makes a Mr. Yuck face and goes '"+GREEN+"YUCK"+END+"!'\n");
   return 1;
}

quiver(str){
   object ob;
   if(!str){
      write("You quiver like a bowl of jelly from your own touch\n");
      say(tpn+" pleases himself and quivers like a bowl of jello\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You quiver shamelessly like a bowl of jello at "+ob->query_name()+"'s touch!\n");
   say(tpn+" quivers shamelessly from "+ob->query_name()+"'s touch.\n");
   return 1;
}

jump(){
   write("You shout: '"+GREEN+"Jump Around"+END+"' and begin to dance!\n");
   say(tpn+" shouts: '"+GREEN+"Jump Around"+END+"' and begins to dance wildly!\n");
   return 1;
}

jazz(){
   write("You go '"+LIGHT_BLUE+"JaZzY"+END+"' and know that you are kewl!\n");
   say(tpn+" goes: '"+LIGHT_BLUE+"JaZzY"+END+"'... you think to yourself: 'Wow that is kewl!\n");
   return 1;
}

thigh(str){
   object ob;
   if(!str){
      write("Ummm.... you cannot lick your own thigh... just thought you should know!\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You lick a figure-8 onto the shapely inner thigh of "+ob->query_name()+".\n");
   write("MmmmMMmmmm.... that is nice!\n");
   tell_object(ob,tpn+" licks a figure-8 on your shapely inner thigh!\n");
   tell_object(ob,"You feel slightly aroused..... \n");
   say(tpn+" licks a figure-8 on "+ob->query_name()+"'s shapely inner thigh.\n");
   say("You gasp!\n");
   return 1;
}

toe(str){
   object ob;
   if(!str){
      write("You suck your own big toe!\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You suck on "+ob->query_name()+"'s big toe erotically!\n");
   tell_object(ob,tpn+" sucks on your big toe.... you feel turned on!\n");
   say(tpn+" sucks on "+ob->query_name()+"'s big toe!\n");
   return 1;
}

howl(){
   write("You howl loudly at the moon!  H O W L!\n");
   say(tpn+" howls loudly at the moon!\n");
   return 1;
}

sleep(){
   write("You pass out from boredom and go to sleep\n");
   say(tpn+" passes out from boredom and goes to sleep\n");
   return 1;
}

chortle(){
   write("You chortle demonically!\n");
   say(tpn+" chortles demonically!\n");
   return 1;
}

thwak(str){
   object ob;
   if(!str){
      write("Who do you wish to thwak?\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob) {
      fail();
      return 1;
   }
   write("You thwak "+ob->query_name()+" for being "+BLUE+"stupid."+END+"\n");
   tell_object(ob,tpn+" thwaks you for being stupid.\n");
   say(tpn+" thwaks "+ob->query_name()+" for being stupid.\n");
   return 1;
}

phair(str){
   object ob;
   if(!str){
      write("Who's hair are you going to pull??\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You pull "+ob->query_name()+"'s hair!\n");
   tell_object(ob,tpn+" pulls your hair!  O U C H!\n");
   say(tpn+" pulls "+ob->query_name()+"'s hair!\n");
   return 1;
}

noogie(str){
   object ob;
   if(!str){
      write("You give yourself a noogie... Duh!\n");
      say(tpn+" gives himself a noogie!\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You give "+ob->query_name()+" a noogie.... IT HURTS!\n");
   say(tpn+" gives "+ob->query_name()+" a noogie.... it looks painful!\n");
   tell_object(ob,tpn+" gives you a noogie.... ouch IT HURTS!\n");
   return 1;
}

cower(){
   write("You cower in absolute fear and terror!\n");
   say(tpn+" cowers in absolute fear and terror!\n");
   return 1;
}

romance(str){
   object ob;
   if(!str){
      write("You desire some romance in your pitiful existance!\n");
      say(tpn+" desires to have some romance once in awhile!... how sad!\n");
      return 1;
   }
   ob = present(str,environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You romance "+ob->query_name()+" hoping to get lucky!\n");
   tell_object(ob, tpn+" tries to romance you!\n");
   say(tpn+" tries to romance "+ob->query_name()+" in hopes of getting lucky!\n");
   return 1;
}

roar(){
   write("You throw back your head and R O A R!\n");
   say(tpn+" roars... you shrink back in FEAR!\n");
   return 1;
}

woo(){
   write("You go 'Woo Woo'.\n");
   say(tpn+" goes 'Woo Woo'\n");
   return 1;
}

wish(){
   write("You wish you were as cool as Pain.\n");
   say(tpn+" wishes to be as cool as Pain.\n");
   return 1;
}

boggle(){
   write("You boggle at the concept.\n");
   say(tpn+" boggles at the concept.\n");
   return 1;
}

flex(){
   write("You flex your muscles impressing those around you.\n");
   say(tpn+ " tries to impress you by flexing.\n");
   return 1;
}

fear(str){
   object ob;
   
   if(!str){
      write("You say 'Fear IT!'\n");
      say(tpn+" says 'Fear IT!'\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      str = capitalize(str);
      write("You fear "+str+".\n");
      say(tpn+" fears "+str+".\n");
      return 1;
   }
   write("You fear "+ob->query_name()+".\n");
   tell_object(ob, tpn+" fears you.\n");
   say(tpn+" fears "+ob->query_name()+".\n");
   return 1;
}

ffear(str){
   object ob;
   
   if(!str){
      write("You say 'FUCKING Fear IT!'\n");
      say(tpn+" says 'FUCKING Fear IT!'\n");
      return 1;
   }
   ob = present(str,environment(tp));
   if(!ob) {
      str = capitalize(str);
      write("You fucking fear "+str+".\n");
      say(tpn+" fucking fears "+str+".\n");
      return 1;
   }
   write("You fear "+ob->query_name()+".\n");
   tell_object(ob, tpn+" fucking fears you.\n");
   say(tpn+" fucking fears "+ob->query_name()+".\n");
   return 1;
}

kiss(str){
   object ob;
   string gender;
   string gender2;
   if(!str){
      write("Kiss who?\n");
      return 1;
   }
   ob = present( str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   if(ob == this_player()){
      write("You want to kiss yourself?\n");
      return 1;
   }
   write("You pull "+ob->query_name()+" closer.\n");
   tell_object(ob,tpn+" pulls you closer.\n");
   say(tpn+" pulls "+ ob->query_name()+" closer.\n");
   if(this_player()->query_gender() == "male"){ gender = "his";}
   if(this_player()->query_gender() == "female"){ gender = "her";}
   if(ob->query_gender() == "female"){ gender2 = "hers";}
   if(ob->query_gender() == "male"){ gender2 = "his";}
   write("You feel your heart flutter as you softly press your lips\n");
   write("against "+gender2+".\n");
   say(tpn+" softly kisses "+ob->query_name()+".\n");
   tell_object(ob,"You feel your heart flutter as "+tpn+" softly presses\n"+gender+" lips against yours.\n");
   return 1;
}

cheer(str){
   object ob;
   if(!str){
      write("You cheer enthusiastically!\n");
      say(tpn+" cheers enthusiastically.\n");
      return 1;
   }
   ob = present( str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   write("You cheer "+ob->query_name()+" enthusiastically.\n");
   say(tpn+" cheers "+ob->query_name()+" enthusiastically.\n");
   return 1;
}

lag(){
   write("You raise your fist high in the air and curses the Gods for creating\n");
   write("this LAG!!\n");
   say(tpn+" curses the Gods for creating this LAG!!\n");
   return 1;
}

raise(){
   write("You raise your eyebrow in disbelief.\n");
   say(tpn+" raises an eyebrow in disbelief.\n");
   return 1;
}

alive(){
   object broom,patch;
   int count;
   int bat;
   string who,guild;
   int x,num,elvl;
   object ob;
   object batarsis_ob;
   object mas,monk,as,dopp;
   /*
   Limit the Fallen's use of this command
   */
/*
   if(this_player()->query_guild_name() == "fallen" && this_player()->query_level() < 20) {
      write("Members of your Order are not allowed to use this command.\n");
      return 1;
   }
*/
   
   num = 0;
   ob = users();
   write("\n");
   write(YELLOW+"*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~"+END+"\n");
   write("   Name:          Lvl:     Pk     Guild     Location:\n");
   write(YELLOW+"*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~"+END+"\n");
  /* added batarsis_ob so you don't do a bunch of find_living() calls during the
     eval, which leads to some funky errors.  [verte] */
   batarsis_ob = find_living("batarsis");
   if(batarsis_ob)
   broom = environment(batarsis_ob);
   for(x=0;x<sizeof(ob);x+=1){
      if((random(100) < 3) && !bat && batarsis_ob && broom) {
         bat = 1;
            write("   Batarsis        19      "+RED+"YES"+END+"    None     "+broom->short()+"\n");
       }
      if(ob[x]->query_level() < 1000000){
         if(ob[x]->query_invis() == 0){
            num++;
            who = ob[x]->query_name();
            count = strlen(who);
            count = 16 - count;
            patch = present("star_tattoo",ob[x]);
            if(patch) {
              if(patch->query_muff() == 0)
               write(BLUE+"~*~"+END);
              else write(BLUE+"~-~"+END);
              }
            else
               write("   ");
            write(who);
            while(count>0){
               write(" ");
               count = count - 1;
            }
            if(ob[x]->query_level() < 20) {
               elvl = ob[x]->query_extra_level();
               if(elvl == 0) {
                  write(ob[x]->query_level()+"\t");
               } else if(elvl < 10) {
                  write(ob[x]->query_level()+"+0"+elvl);
               } else {
                  write(ob[x]->query_level()+"+"+elvl);
               }
               
               if(elvl != 100)
                  write(" ");
            }
            else write(ob[x]->query_level()+"\n");
            if(ob[x]->query_level() < 20) {
               if(ob[x]->query_pl_k() == 1){write("  "+RED+"Yes"+END+"    ");}
               if(ob[x]->query_pl_k() == 0){write("  "+YELLOW+"No"+END+"     ");}
               guild = ob[x]->query_guild_name();
               if(!guild) {write( "None     ");}
               if(guild == "vampire") {write("Vampire  ");}
               if(ob[x]->query_real_name() == "guest") {write("Guest    ");}
               if(guild == "monk") {write("Monk     ");}
               if(guild == "polymorph") {write("Poly     ");}
               if(guild == "Knights Templar") {write("Knight   ");}
               if(guild == "bard") {write("Bard     ");}
               if(guild == "black circle") { write("BCM      "); }
               if(guild == "Undead") {write("Undead   ");}
               if(guild == "shadow") {write("Shadow   ");}
               if(guild == "shardak") {write("Shardak  ");}
               if(guild == "cyberninja") {write("Cyber    ");}
               if(guild == "Dark Order") { write("DarkOrder"); }
               if(guild == "rangers") {write("Ranger   ");}
               if(guild == "dark rangers") {write("D_Ranger ");}
               if(guild == "bloodfist") { write("Bloodfist"); }
               if(guild == "meijin") {write("Meijin   ");}
               if(guild == "jedi") {write ("Jedi     ");}
               if(guild == "mage") {write ("Mage     ");}
               if(guild == "healer") {write("Healer   ");}
               if(guild == "necromancer") {write("Necro    ");}
               if(guild == "warrior"){ write("Warrior  "); }
               if(guild == "fallen") {write("Fallen   ");}
               if(guild == "symbiote") {write("Symbiote ");}
               if(guild == "neo symbiote") {write("NeoSymb  ");}
               if(guild == "dervish") {write("Dervish  ");}
               write(" ");
               if(!environment(ob[x])){
                  write("Location Unknown\n");
               }
               if(environment(ob[x])){
                  write(environment(ob[x])->short()+"\n");
               }
            }
         }
       }
   }
   write(YELLOW+"*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~"+END+"\n");
   write("Total Number of Players: "+num+"\n");
   write(YELLOW+"*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~~*~"+END+"\n");
   return 1;
}

pt(str){
   int x;
   object patch;
   object ob;
   
   write("Use star <message> or star :<emote>\n");
   /*
   if(!str) {
      write("You must specify a message\n");
      return 1;
   }
   
   ob = users();
   for(x=0; x<sizeof(ob);x+=1){
      if(present("star_tattoo", ob[x])){
         patch = present( "star_tattoo", ob[x]);
         if(patch->query_muff() == 0 && patch->query_color() == 0){
            tell_object(ob[x],YELLOW+"~*~"+END+BOLD+this_player()->query_name()+
               END+YELLOW+"~*~:"+END+" "+str+"\n");
         }
         if(patch->query_muff() == 0 && patch->query_color() == 1){
            tell_object(ob[x], "~*~"+this_player()->query_name()+"~*~: "+str+"\n");
         }
       }
   }
   */
   return 1;
}

pe(str){
   int x;
   object ob;
   object patch;
   
   write("Use star <message> or star :<emote>\n");
   /*
   if(!str) {
      write("You must specify an emote.\n");
      return 1;
   }
   
   ob = users();
   for( x = 0; x < sizeof(ob); x += 1) {
      if(present("star_tattoo", ob[x])){
         patch = present("star_tattoo", ob[x]);
         if(patch->query_muff() == 0 && patch->query_color() == 0){
            tell_object(ob[x], YELLOW+"~*~"+END+BOLD+"-*-"+END+YELLOW+"~*~"+END+" "+this_player()->query_name()+" "+str+"\n");
         }
         if(patch->query_muff() == 0 && patch->query_color() == 1){
            tell_object(ob[x], "~*~-*-~*~ "+this_player()->query_name()+" "+str+"\n");
         }
       }
   }
   */
   return 1;
}

share(str){
   object ob;
   object patch;
   if(!str){
      write("Usage: share <playername>\n");
      return 1;
   }
   ob = present( str, environment(this_player()));
   if(!ob){
      fail();
      return 1;
   }
   if(!ob->is_player() && ob->query_name() != "summerhead") {
      write("You can only give a star to players!\n");
      return 1;
   }
   if( present("star_tattoo", ob)){
      write("This player already has a star.\n");
      return 1;
   }
   if( ob->query_real_name() == "guest" ){
      write("Only real players get a star!\n");
      return 1;
   }
   if( ob->query_level() < 8 && ob->query_real_name() != "woot" ){
      write("The player must attain a higher level to be worthy of the star!\n");
      return 1;
   }
   patch = clone_object("players/pain/NEW/items/star");
   move_object(patch,ob);
   write("You give a star to "+ob->query_name()+"\n");
   tell_object(ob, tpn+" rubs your ankle and a star appears!\n");
   tell_object(ob, tpn+" give you a "+YELLOW+"star"+END+"!\n");
   tell_object(ob, "Pain nods in approval.\n");
   return 1;
}

punt(str) {
   object who;
   object user;
   string whon, poss;
   string RN;
   int distance;
   
   user = this_player();
   RN = user->query_real_name();
   
   if( !str ) {
      write("Who do you want to punt?\n");
      return 1;
   }
   
   whon = capitalize( str );
   if(!present(str, environment(this_player()))) {
      write(whon+" is not here.\n");
      return 1;
   }
   who = find_living( str );
   if( !who ) {
      write("You can't punt that!\n");
      return 1;
   }
   
   poss = (string) who->query_pronoun();
   distance = random(50);
   if(user->query_level() > 20 )
      distance = random(55) + 30;
   
   if( distance > 0 ) {
      write("You punt "+whon+" "+distance+" yards.");
      say(capitalize(this_player()->query_real_name())+" punts "+whon+" "+distance+" yards. ");
   }
   
   switch( distance ) {
      case 0:
      write("You try to punt "+whon+" but "+poss+" deftly moves out of the way!\n");
      say(RN+" tries to punt "+whon+" but "+poss+" deftly moves out of the way!\n");
      say(RN+" lands on the ground with a thud.\n");
      break;
      case 1 .. 25:
      write(" What a squib kick!\n");
      say(" What a squib kick! \n");
      break;
      case 26 .. 39:
      write(" A decent kick.\n");
      say(" A decent kick. \n");
      break;
      default:
      write(" Damn, you booted "+whon+"'s ass!\n");
      say(RN+" booted "+whon+"'s ass!\n");
      break;
   }
   return 1;
   
}

