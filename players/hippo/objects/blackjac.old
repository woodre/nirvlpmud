int n,stock,hand,score,myscore,joho;
string shaked;
 
reset()
{ shake();
  return;
}
id(str) { return str=="BlackJack cards"; }
long() { write("This are playing cards.\n"+
               "To see your cards, type 'show'.\nYou can alse type 'rules'.\n"); }
short() { return "cards"; }
get() { return 1; }
drop() { return 0; }
value() { return 0; }
 
init()
{  add_action("rules","rules");
   add_action("show","show");
   add_action("card","card");
   add_action("stay","stay");
}
 
rules()
{   write("\t...............................................\n"+
         "\t..................BLACKJACK....................\n"+
         "\t...............................................\n"+
         "This is quite an easy game. You play against me, there are no other\n"+
         "players involved. The different cards have the following values:\n"+
         "Jack: 1, Queen: 2, King: 3, Ace: 1 or 11, the other cards show their\n"+
         "own values. I give you two cards in advance. You can ask for another \n"+
         "card by typing 'card', or you can just 'stay'. In that case it's my\n"+
         "turn to draw some cards. I stay if I have more than 17 points, else \n"+
         "I take another card. Suppose one has exactly 21, than he gets a 3000\n"+
         "coins bonus from the other player. The looser always pays 1000 times\n"+
         "the difference in score to the winner of the game. Finally, when your\n"+
         "points exceed 21, you will loose 3000 coins.\n\n"+
         "Easy, huh? Ok, let's play the game then.\n"+
         "If you wanna see what cards you have now, just type 'show'.\n");
   return 1;
}
 
stay()
{  int tmp,next,cardsc,coins;
   string cardcol, cardnum;
   write("Hmm.. you don't want a card anymore, and you don't have 21 points\n"+
         "yet, right? I'll see what cards i'm gonna draw from the deck. You\n"+
         "can watch this, too. Just wait.....\n\n");
   myscore=0;
   next=hand;
   write("My cards are:\n");
   while(myscore<=17)
   {  next=next+1;
      tmp=sscanf(shaked[next],"%s-%s",cardcol,cardnum);
      if(tmp!=2)
      {  write("Something is wrong.\nPlease, mail Hippo!!\n");
         return 0;
      }  
      if(cardnum=="A"||cardnum=="J"||cardnum=="Q"||cardnum=="K")
      {  tmp=sscanf(shaked[next],"%s-%d",cardcol,cardnum); }
      if(cardnum=="A") { cardnum="Ace"; myscore=myscore+11; }
      else { if(cardnum=="J") { cardnum="Jack"; myscore=myscore+1; }
         else { if(cardnum=="Q") { cardnum="Queen"; myscore=myscore+2; }
            else { if(cardnum=="K") { cardnum="King"; myscore=myscore+3; }
               else { tmp=sscanf(shaked[next],"%s-%d",cardcol,cardsc);
                      myscore=myscore+cardsc;
           }  }  }  }
      if(cardcol=="S") cardcol="spades"; if(cardcol=="D") cardcol="diamonds";
      if(cardcol=="H") cardcol="hearts"; if(cardcol=="K") cardcol="clubs";
      write("\t"+cardnum+" of "+cardcol+"\n");
   }
   if(myscore>21)
   {  coins=3000;
      write("Shit. I have more than 21 points...\n"+
            "That means you won, I'll give you 3000 coins for this game.\n"+
            "I'll shake the cards again. You can play or just walk away\n"+
            "and play another time.\n\n");
   }
   else
   {  write("I have "+myscore+" points, you "+score+" points. \n");
      if (score>myscore)
      {  coins=(score-myscore)*1000;
         if(score==21)
         {  coins=coins+3000;
            write("WOW!!?! 21 Points?? How did you do that?\n"+
                  "Anyway, here you are: 3000 gold coins plus the difference,\n"+
                  "which makes "+coins+" coins.\n");
         }
         else
         { write("That means you won this time, I'll give you "+coins+" coins.\n"+
               "I'll shake the cards again. You can play or just walk\n"+
               "away and play another time.\n\n");
         }
      }  
      else
      {  if(score==myscore)
         {  coins=0;
            write("A draw. I'll shake the cards again. You can play again\n"+
                  "or just walk away and play another time.\n\n");
         }
         else
         {  if(score<myscore)
            {  coins=(score-myscore)*1000;
               if(myscore==21)
               {  coins=coins-3000;
                  write("YEAH! I have 21 points!!!\n"+
                        "That's gonna cost you 3000 coins extra, man!\n");
               } 
               write("I won this time. You owe me "+coins+" coins. I'll shake the cards\n"+
                     "again. You can play or just walk away and play another time.\n\n");
            }
         }
      }  
   }
   call_other(this_player(),"add_money",coins);
   shake();
   return 1;
}
 
count()
{  int cardsc,tmp,coins;
   string dump,pic;
   score=0;
   for(n=0;n<hand;n++)
   {  tmp=sscanf(shaked[n],"%s-%s",dump,pic);
      if (pic=="J") { score=score+1; }
      else { if (pic=="Q") { score=score+2; }
               else { if (pic=="K") { score=score+3; }
                    else { if (pic=="A")
                           {  if (joho==0) { score=score+11; }
                              else { score=score+1; }
                           }
                           else { tmp=sscanf(shaked[n],"%s-%d",dump,cardsc);
                                  score=score+cardsc;
                                }
                          }
                  }
           }
   }
   if(score>21)
   {  if (joho==0) { joho=1; count(); return; }
      write("You have more than 21 points. You LOST!!\n"+
            "This costs you 3000 coins.. *grin*\n\n"+
            "I'll shake the cards again. You could just walk away from here.\n"+
            "Just type 'show' whenever you wanna play, we'll continue by then.\n"+
            "If you don't wanna play at all, you can drop the cards.\n");
      coins=-3000;
      call_other(this_player(),"add_money",coins);
      shake();
      return 1;
   }
   else { write("\tTotal score is: "+score+"\n"); }
}
 
card()
{  write("Ok, I gave you a card.\n");
   hand=hand+1;
   stock=stock-1;
   show();
   write("You want another 'card', or you 'stay'?\n");
   return 1;
}
 
stock()
{  write("The cards are:\n");
   for(n=32-stock;n<32;n++) write(shaked[n]+"\t");
   return 1;
}
 
show()
{  int tmp;
   string cardcol, cardnum;
   write("Your cards are:\n");
   for(n=0;n<hand;n++)
   {  tmp=sscanf(shaked[n],"%s-%s",cardcol,cardnum);
      if(tmp!=2) write("Something is wrong.\nPlease, mail Hippo!!\n");
      if(cardnum=="A") cardnum="Ace"; if(cardnum=="J") cardnum="Jack";
      if(cardnum=="Q") cardnum="Queen"; if(cardnum=="K") cardnum="King";
      if(cardcol=="S") cardcol="spades"; if(cardcol=="D") cardcol="diamonds";
      if(cardcol=="H") cardcol="hearts"; if(cardcol=="K") cardcol="clubs";
      write("\t"+cardnum+" of "+cardcol+"\n");
   }
   count();
   return 1;
}
 
shake()
{  int whatcard, oldarray, newarray;
   int k,l,m,o;
   string card;
   card = allocate (32);
   card       = ({"S-7","S-8","S-9","S-10","S-J","S-Q","S-K","S-A",
                  "H-7","H-8","H-9","H-10","H-J","H-Q","H-K","H-A",
                  "D-7","D-8","D-9","D-10","D-J","D-Q","D-K","D-A",
                  "K-7","K-8","K-9","K-10","K-J","K-Q","K-K","K-A"});
   oldarray = allocate (sizeof(card)+1);
   newarray = allocate (sizeof(card));
   shaked = allocate (sizeof(card));
   stock=30; hand=2; joho=0;
   for(n=0;n<sizeof(card);n++) oldarray[n]=n;
   for(n=0;n<sizeof(card);n++)
   {  k=0;
      whatcard=oldarray[random(sizeof(card)-n)];
      for(m=0;m<sizeof(card);m++)
      {  if(oldarray[m]==whatcard) {m=m+1; }
         newarray[k]=oldarray[m];
         k=k+1;
      }  
      shaked[n]=card[whatcard];
      for(l=0;l<sizeof(card);l++) oldarray[l] = newarray[l];
   }
   show();
   return 1;
}
