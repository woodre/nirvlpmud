#include "/obj/clean.c"
#define MAXCOINS 80000
int money;
static int oldwt, olderwt;

reset(arg) {
    if (arg)
	return;
    money = 1;
}

/*
query_weight() { return 0; }
*/
query_weight() {
  if(money > 749) {
    if(money && money / 750 != oldwt)
    set_oldwt(money/750);
    return money / 750;
  }
  else 
  {
    if(money && 1 != oldwt) set_oldwt(1);
    return 1;
  }
}

short() {
    if (money == 0)
	return 0;
    if(money == 1)
       return money + " gold coin";
    return money + " gold coins";
}

get() {
  int cashola,diff;
    if(this_player()) {
      cashola = this_player()->query_money();
      if(cashola > MAXCOINS - 1) {
        write("You have the maximum amount of coins.\n");
        write("You pick up the coins and place them in your inventory.\n");
        return 1;
      }
      if(cashola + money > MAXCOINS) {
        diff = MAXCOINS - cashola;
        call_other(this_player(), "add_money", diff);
        write("You max your coins and place the remainder in your inventory.\n");
        money=money-diff;
        return 1;
      }
      call_other(this_player(), "add_money", money);
    }
    money = 0;
    set_heart_beat(1);
    return 1;
}

set_money(m) {
    money = m;
}

id(str) {
     if (str == "coins" && money > 1)
	return 1;
    if (str == "money")
	return 1;
    if (str == "moneyXX")
       return 1;
    if (str == "coin" && money == 1)
      return 1;
}

heart_beat() {
    if (money == 0)
	destruct(this_object());
}

check_loc(){ 
  object blah;
  blah=environment(this_object());
  if(blah)
    if(blah->query_npc())
    {
      blah->add_money(money);
      destruct(this_object());
    }
return;
}
init() {
  check_loc();
  add_action("split","splitmoney");
}
is_money() {return 1;}

restore_thing(str){
      restore_object(str);
      return 1;
   }
save_thing(str){
      save_object(str);
      return 1;
   }
locker_arg() {  
    return money;
}
locker_init(str) {
    int x;
    if(sscanf(str,"%d",x)==1) money = x;
    else money = 0;
    return 1;
}

query_save_flag() { 
  if(money > 3000) return 1;
  return 0;
}
split(arg) {
  int spl;
  object splob;
  if(!arg || sscanf(arg,"%d",spl) != 1) {
    write("USAGE: splitmoney <# of coins>\n");
    return 1;
  }
  if (spl > money - 1 || spl < 0) {
    write("Number must be less than the total number of coins.\n");
    return 1;
  }
  splob = clone_object("obj/money");
  money = money - spl;
  splob->set_money(spl);
  move_object(splob,environment(this_object()));
  write("You split up the group of coins.\n");
  say(this_player()->query_name()+" splits up a group of coins.\n");
  return 1;
}

set_oldwt(arg) { 
  olderwt = oldwt;
  oldwt = arg;
}
query_oldwt() {
  return oldwt;
}
query_olderwt() { return olderwt; }
clear_olderwt() { olderwt = 0;}
